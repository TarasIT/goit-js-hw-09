{"mappings":"siBAGA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,kBAGjCH,EAAKC,KAAKM,iBAAiB,UAE3B,SAAkCC,GAChCA,EAAMC,iBAEN,MAAMJ,EAAYK,SAASV,EAAKK,UAAUM,OACpCL,EAASI,SAASV,EAAKM,OAAOK,OACpC,IAAIC,EAAQF,SAASV,EAAKI,WAAWO,OACjCE,EAAW,EAEf,MAAMC,EAAiBC,aAAY,KA2BrC,IAAuBC,EAAUC,EA1B7BJ,GAAY,EAEK,IAAbA,IACFD,GAASP,IAuBQW,EApBLH,EAoBeI,EApBLL,EAqBnB,IAAIM,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,QA1BlBM,MAAK,EAACP,SAAEA,EAAQC,MAAEA,MACjBO,EAAAC,GAASC,OAAOC,QACd,uBAAqBX,QAAiBC,UAGzCW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBO,EAAAC,GAASC,OAAOG,QACd,sBAAoBb,QAAeC,UAIrCJ,IAAaP,GACfwB,cAAchB,KAEfT,GAEHG,EAAMuB,cAAcC","sources":["src/js/03-promises.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onBtnCreatePromisesClick);\n\nfunction onBtnCreatePromisesClick(event) {\n  event.preventDefault();\n\n  const delayStep = parseInt(refs.delayStep.value);\n  const amount = parseInt(refs.amount.value);\n  let delay = parseInt(refs.firstDelay.value);\n  let position = 0;\n\n  const createPromises = setInterval(() => {\n    position += 1;\n\n    if (position !== 1) {\n      delay += delayStep;\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    if (position === amount) {\n      clearInterval(createPromises);\n    }\n  }, delayStep);\n\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","delayStep","amount","addEventListener","event","preventDefault","parseInt","value","delay1","position1","createPromises","setInterval","position","delay","Promise","resolve","reject","Math","random","then","$parcel$interopDefault","$eWCmQ","Notify","success","catch","failure","clearInterval","currentTarget","reset"],"version":3,"file":"03-promises.1c2002cd.js.map"}