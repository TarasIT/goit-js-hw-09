{"mappings":"kjBAGMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,kBAmCjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA1CPT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAkCC,GAChCA,EAAMC,iBAEN,IAAMd,EAAYe,SAASpB,EAAKK,UAAUgB,OACpCf,EAASc,SAASpB,EAAKM,OAAOe,OAChCC,EAAQF,SAASpB,EAAKI,WAAWiB,OACjCE,EAAW,EAEf,KAAOA,IAAajB,GAED,KADjBiB,GAAY,KAEVD,GAASjB,GAGXE,EAAcgB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,EAAAC,GAASC,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAGjDsB,OAAM,SAAAN,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,EAAAC,GAASC,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAKnDS,EAAMe,cAAcC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onBtnCreatePromisesClick);\n\nfunction onBtnCreatePromisesClick(event) {\n  event.preventDefault();\n\n  const delayStep = parseInt(refs.delayStep.value);\n  const amount = parseInt(refs.amount.value);\n  let delay = parseInt(refs.firstDelay.value);\n  let position = 0;\n\n  while (position !== amount) {\n    position += 1;\n    if (position !== 1) {\n      delay += delayStep;\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","parseInt","value","delay1","position1","then","param","$parcel$interopDefault","$iU1Pc","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.0ddae987.js.map"}