{"mappings":"kjBAGMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,kBAGjCH,EAAKC,KAAKM,iBAAiB,UAE3B,SAAkCC,GAChCA,EAAMC,iBAEN,IAAMJ,EAAYK,SAASV,EAAKK,UAAUM,OACpCL,EAASI,SAASV,EAAKM,OAAOK,OAChCC,EAAQF,SAASV,EAAKI,WAAWO,OACjCE,EAAW,EAETC,EAAiBC,aAAY,WA2BrC,IAAuBC,EAAUC,EAxBZ,KAFjBJ,GAAY,KAGVD,GAASP,IAuBQW,EApBLH,EAoBeI,EApBLL,EAqBnB,IAAIM,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,cA1BlBM,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUC,EAAKO,EAALP,MACjBQ,EAAAC,GAASC,OAAOC,QACd,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,UAGjDa,OAAM,SAAAN,G,IAAGR,EAAQQ,EAARR,SAAUC,EAAKO,EAALP,MAClBQ,EAAAC,GAASC,OAAOI,QACd,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,UAI7CJ,IAAaP,GACf0B,cAAclB,KAEfT,GAEHG,EAAMyB,cAAcC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onBtnCreatePromisesClick);\n\nfunction onBtnCreatePromisesClick(event) {\n  event.preventDefault();\n\n  const delayStep = parseInt(refs.delayStep.value);\n  const amount = parseInt(refs.amount.value);\n  let delay = parseInt(refs.firstDelay.value);\n  let position = 0;\n\n  const createPromises = setInterval(() => {\n    position += 1;\n\n    if (position !== 1) {\n      delay += delayStep;\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    if (position === amount) {\n      clearInterval(createPromises);\n    }\n  }, delayStep);\n\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","addEventListener","event","preventDefault","parseInt","value","delay1","position1","createPromises","setInterval","position","delay","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","$iU1Pc","Notify","success","concat","catch","failure","clearInterval","currentTarget","reset"],"version":3,"file":"03-promises.b43c84e4.js.map"}